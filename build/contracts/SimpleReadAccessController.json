{
  "contractName": "SimpleReadAccessController",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "RemovedAccess",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "hasAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RemovedAccess\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SimpleReadAccessController is not suitable for access controlling writes since it grants any externally owned account access! See SimpleWriteAccessController for that.\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addAccess(address)\":{\"params\":{\"_user\":\"The address to add\"}},\"hasAccess(address,bytes)\":{\"params\":{\"_user\":\"The address to query\"}},\"removeAccess(address)\":{\"params\":{\"_user\":\"The address to remove\"}},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"title\":\"SimpleReadAccessController\"},\"userdoc\":{\"methods\":{\"addAccess(address)\":{\"notice\":\"Adds an address to the access list\"},\"disableAccessCheck()\":{\"notice\":\"makes the access check unenforced\"},\"enableAccessCheck()\":{\"notice\":\"makes the access check enforced\"},\"hasAccess(address,bytes)\":{\"notice\":\"Returns the access of an address\"},\"removeAccess(address)\":{\"notice\":\"Removes an address from the access list\"}},\"notice\":\"Gives access to: - any externally owned account (note that offchain actors can always read any contract storage regardless of onchain access control measures, so this does not weaken the access control while improving usability) - accounts explicitly added to an access list\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/v0.6/SimpleReadAccessController.sol\":\"SimpleReadAccessController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/v0.6/Owned.sol\":{\"keccak256\":\"0x93c014d58b820cc7c081b4b604d939c21942296fe0c0cb0069ca4ee63d728bc6\",\"urls\":[\"bzz-raw://b7e8c0742efb5691733cfc4ab1d81221c4a513223820dea3c6885c138a0fb3a7\",\"dweb:/ipfs/QmV8PwFJcGVdy5AAN4hmeKuRwF3eAjrbfYSeFs3Q5cAYE4\"]},\"project:/contracts/v0.6/SimpleReadAccessController.sol\":{\"keccak256\":\"0xac369a002088e3934f3bf74545ccc28d79b05b05fe2ac6f76c963b5707d8bfcb\",\"urls\":[\"bzz-raw://010491b2188a7dd11045993caf6c0c28529f36ca1fabf1f2a0fe22669b0fc5d4\",\"dweb:/ipfs/QmRyBFRsdFehSUbjqUZHvxgMLwWfL28w7H3sbQqcw86jWU\"]},\"project:/contracts/v0.6/SimpleWriteAccessController.sol\":{\"keccak256\":\"0x0daa95c237a078eb1f2e68839c44330f7ef36f5562e6140f62305410031b17be\",\"urls\":[\"bzz-raw://b0e15ad3289b9670513bae7cbcbf6eadb63c546ded3244d0c4c54514815e5e16\",\"dweb:/ipfs/QmYQ5W2s9qd3Y8QSsfGqiZAJtp5dTmMyGmVJHUxJVU3Rju\"]},\"project:/contracts/v0.6/interfaces/AccessControllerInterface.sol\":{\"keccak256\":\"0x92f6ce5945557043b33b5dcd45045aac4c3cb40a85859570750894f0e221a865\",\"urls\":[\"bzz-raw://082523e85a8e46652fbb91791669c8a29c5e2e3de4f68a12d35657ddbe940a26\",\"dweb:/ipfs/Qme8YwLXNzzTVXVCmnJkSaxiLBWxjvut7yRQgDhy3zcMKU\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060146101000a81548160ff021916908315150217905550610d368061006d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638823da6c116100665780638823da6c146101a95780638da5cb5b146101ed578063a118f24914610237578063dc7f01241461027b578063f2fde38b1461029d57610093565b80630a756983146100985780636b14daf8146100a257806379ba5097146101955780638038e4a11461019f575b600080fd5b6100a06102e1565b005b61017b600480360360408110156100b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100f557600080fd5b82018360208201111561010757600080fd5b8035906020019184600183028401116401000000008311171561012957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610402565b604051808215151515815260200191505060405180910390f35b61019d61044c565b005b6101a7610614565b005b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610733565b005b6101f5610906565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102796004803603602081101561024d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061092b565b005b610283610afd565b604051808215151515815260200191505060405180910390f35b6102df600480360360208110156102b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b10565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600160149054906101000a900460ff1615610400576000600160146101000a81548160ff0219169083151502179055507f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963860405160405180910390a15b565b600061040e8383610c91565b8061044457503273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600160149054906101000a900460ff166107315760018060146101000a81548160ff0219169083151502179055507faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348060405160405180910390a15b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610903576000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610afa576001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b600160149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610cf85750600160149054906101000a900460ff16155b90509291505056fea2646970667358221220e7a7aa970dad5fdc35a9ce4f62eef43626e78844606284aac379a8eaace7d48764736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638823da6c116100665780638823da6c146101a95780638da5cb5b146101ed578063a118f24914610237578063dc7f01241461027b578063f2fde38b1461029d57610093565b80630a756983146100985780636b14daf8146100a257806379ba5097146101955780638038e4a11461019f575b600080fd5b6100a06102e1565b005b61017b600480360360408110156100b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100f557600080fd5b82018360208201111561010757600080fd5b8035906020019184600183028401116401000000008311171561012957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610402565b604051808215151515815260200191505060405180910390f35b61019d61044c565b005b6101a7610614565b005b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610733565b005b6101f5610906565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102796004803603602081101561024d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061092b565b005b610283610afd565b604051808215151515815260200191505060405180910390f35b6102df600480360360208110156102b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b10565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600160149054906101000a900460ff1615610400576000600160146101000a81548160ff0219169083151502179055507f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963860405160405180910390a15b565b600061040e8383610c91565b8061044457503273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600160149054906101000a900460ff166107315760018060146101000a81548160ff0219169083151502179055507faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348060405160405180910390a15b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610903576000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610afa576001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b600160149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610cf85750600160149054906101000a900460ff16155b90509291505056fea2646970667358221220e7a7aa970dad5fdc35a9ce4f62eef43626e78844606284aac379a8eaace7d48764736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "627:381:20:-:0;;;453:10:15;445:5;;:18;;;;;;;;;;;;;;;;;;730:4:21;715:12;;:19;;;;;;;;;;;;;;;;;;627:381:20;;;;;;",
  "deployedSourceMap": "627:381:20:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;627:381:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1854:159:21;;;:::i;:::-;;796:209:20;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;796:209:20;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;796:209:20;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;796:209:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;796:209:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;796:209:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;813:254:15;;;:::i;:::-;;1634:157:21;;;:::i;:::-;;1398:175;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1398:175:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;186:20:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1119:170:21;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1119:170:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;471:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;574:150:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;574:150:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;1854:159:21;1201:5:15;;;;;;;;;;;1187:19;;:10;:19;;;1179:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:12:21::1;;;;;;;;;;;1921:88;;;1962:5;1947:12;;:20;;;;;;;;;;;;;;;;;;1981:21;;;;;;;;;;1921:88;1854:159::o:0;796:209:20:-;924:4;945:33;961:5;968:9;945:15;:33::i;:::-;:55;;;;991:9;982:18;;:5;:18;;;945:55;938:62;;796:209;;;;:::o;813:254:15:-;883:12;;;;;;;;;;;869:26;;:10;:26;;;861:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:16;948:5;;;;;;;;;;;929:24;;967:10;959:5;;:18;;;;;;;;;;;;;;;;;;1006:1;983:12;;:25;;;;;;;;;;;;;;;;;;1051:10;1020:42;;1041:8;1020:42;;;;;;;;;;;;813:254;:::o;1634:157:21:-;1201:5:15;;;;;;;;;;;1187:19;;:10;:19;;;1179:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:12:21::1;;;;;;;;;;;1700:87;;1742:4;1727:12:::0;::::1;:19;;;;;;;;;;;;;;;;;;1760:20;;;;;;;;;;1700:87;1634:157::o:0;1398:175::-;1201:5:15;;;;;;;;;;;1187:19;;:10;:19;;;1179:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1476:10:21::1;:17;1487:5;1476:17;;;;;;;;;;;;;;;;;;;;;;;;;1472:97;;;1523:5;1503:10;:17;1514:5;1503:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1542:20;1556:5;1542:20;;;;;;;;;;;;;;;;;;;;;;1472:97;1398:175:::0;:::o;186:20:15:-;;;;;;;;;;;;;:::o;1119:170:21:-;1201:5:15;;;;;;;;;;;1187:19;;:10;:19;;;1179:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:10:21::1;:17;1206:5;1195:17;;;;;;;;;;;;;;;;;;;;;;;;;1190:95;;1242:4;1222:10;:17;1233:5;1222:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1260:18;1272:5;1260:18;;;;;;;;;;;;;;;;;;;;;;1190:95;1119:170:::0;:::o;471:24::-;;;;;;;;;;;;;:::o;574:150:15:-;1201:5;;;;;;;;;;;1187:19;;:10;:19;;;1179:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:3:::1;651:12;;:18;;;;;;;;;;;;;;;;;;715:3;681:38;;708:5;::::0;::::1;;;;;;;;;681:38;;;;;;;;;;;;574:150:::0;:::o;840:178:21:-;958:4;979:10;:17;990:5;979:17;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;1001:12;;;;;;;;;;;1000:13;979:34;972:41;;840:178;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./SimpleWriteAccessController.sol\";\n\n/**\n * @title SimpleReadAccessController\n * @notice Gives access to:\n * - any externally owned account (note that offchain actors can always read\n * any contract storage regardless of onchain access control measures, so this\n * does not weaken the access control while improving usability)\n * - accounts explicitly added to an access list\n * @dev SimpleReadAccessController is not suitable for access controlling writes\n * since it grants any externally owned account access! See\n * SimpleWriteAccessController for that.\n */\ncontract SimpleReadAccessController is SimpleWriteAccessController {\n\n  /**\n   * @notice Returns the access of an address\n   * @param _user The address to query\n   */\n  function hasAccess(\n    address _user,\n    bytes memory _calldata\n  )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n  {\n    return super.hasAccess(_user, _calldata) || _user == tx.origin;\n  }\n\n}\n",
  "sourcePath": "/home/rol/Desktop/lotteryVue/lottery/contracts/v0.6/SimpleReadAccessController.sol",
  "ast": {
    "absolutePath": "project:/contracts/v0.6/SimpleReadAccessController.sol",
    "exportedSymbols": {
      "SimpleReadAccessController": [
        5383
      ]
    },
    "id": 5384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5355,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:20"
      },
      {
        "absolutePath": "project:/contracts/v0.6/SimpleWriteAccessController.sol",
        "file": "./SimpleWriteAccessController.sol",
        "id": 5356,
        "nodeType": "ImportDirective",
        "scope": 5384,
        "sourceUnit": 5538,
        "src": "57:43:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5358,
              "name": "SimpleWriteAccessController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5537,
              "src": "666:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleWriteAccessController_$5537",
                "typeString": "contract SimpleWriteAccessController"
              }
            },
            "id": 5359,
            "nodeType": "InheritanceSpecifier",
            "src": "666:27:20"
          }
        ],
        "contractDependencies": [
          4696,
          5537,
          7657
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5357,
          "nodeType": "StructuredDocumentation",
          "src": "102:524:20",
          "text": "@title SimpleReadAccessController\n@notice Gives access to:\n- any externally owned account (note that offchain actors can always read\nany contract storage regardless of onchain access control measures, so this\ndoes not weaken the access control while improving usability)\n- accounts explicitly added to an access list\n@dev SimpleReadAccessController is not suitable for access controlling writes\nsince it grants any externally owned account access! See\nSimpleWriteAccessController for that."
        },
        "fullyImplemented": true,
        "id": 5383,
        "linearizedBaseContracts": [
          5383,
          5537,
          4696,
          7657
        ],
        "name": "SimpleReadAccessController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5437
            ],
            "body": {
              "id": 5381,
              "nodeType": "Block",
              "src": "932:73:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5372,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5362,
                          "src": "961:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5373,
                          "name": "_calldata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5364,
                          "src": "968:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5370,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "945:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_SimpleReadAccessController_$5383",
                            "typeString": "contract super SimpleReadAccessController"
                          }
                        },
                        "id": 5371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hasAccess",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5437,
                        "src": "945:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (address,bytes memory) view returns (bool)"
                        }
                      },
                      "id": 5374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "945:33:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5375,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "982:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5376,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "991:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 5377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "991:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "982:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "945:55:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5369,
                  "id": 5380,
                  "nodeType": "Return",
                  "src": "938:62:20"
                }
              ]
            },
            "documentation": {
              "id": 5360,
              "nodeType": "StructuredDocumentation",
              "src": "699:94:20",
              "text": "@notice Returns the access of an address\n@param _user The address to query"
            },
            "functionSelector": "6b14daf8",
            "id": 5382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAccess",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "902:8:20"
            },
            "parameters": {
              "id": 5365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5362,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5382,
                  "src": "820:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5364,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5382,
                  "src": "839:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5363,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:51:20"
            },
            "returnParameters": {
              "id": 5369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5368,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5382,
                  "src": "924:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5367,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "923:6:20"
            },
            "scope": 5383,
            "src": "796:209:20",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 5384,
        "src": "627:381:20"
      }
    ],
    "src": "32:977:20"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/v0.6/SimpleReadAccessController.sol",
      "exportedSymbols": {
        "SimpleReadAccessController": [
          5383
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 5355,
        "name": "PragmaDirective",
        "src": "32:23:20"
      },
      {
        "attributes": {
          "SourceUnit": 5538,
          "absolutePath": "project:/contracts/v0.6/SimpleWriteAccessController.sol",
          "file": "./SimpleWriteAccessController.sol",
          "scope": 5384,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5356,
        "name": "ImportDirective",
        "src": "57:43:20"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4696,
            5537,
            7657
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            5383,
            5537,
            4696,
            7657
          ],
          "name": "SimpleReadAccessController",
          "scope": 5384
        },
        "children": [
          {
            "attributes": {
              "text": "@title SimpleReadAccessController\n@notice Gives access to:\n- any externally owned account (note that offchain actors can always read\nany contract storage regardless of onchain access control measures, so this\ndoes not weaken the access control while improving usability)\n- accounts explicitly added to an access list\n@dev SimpleReadAccessController is not suitable for access controlling writes\nsince it grants any externally owned account access! See\nSimpleWriteAccessController for that."
            },
            "id": 5357,
            "name": "StructuredDocumentation",
            "src": "102:524:20"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SimpleWriteAccessController",
                  "referencedDeclaration": 5537,
                  "type": "contract SimpleWriteAccessController"
                },
                "id": 5358,
                "name": "UserDefinedTypeName",
                "src": "666:27:20"
              }
            ],
            "id": 5359,
            "name": "InheritanceSpecifier",
            "src": "666:27:20"
          },
          {
            "attributes": {
              "baseFunctions": [
                5437
              ],
              "functionSelector": "6b14daf8",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "hasAccess",
              "scope": 5383,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns the access of an address\n@param _user The address to query"
                },
                "id": 5360,
                "name": "StructuredDocumentation",
                "src": "699:94:20"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 5366,
                "name": "OverrideSpecifier",
                "src": "902:8:20"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_user",
                      "overrides": null,
                      "scope": 5382,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 5361,
                        "name": "ElementaryTypeName",
                        "src": "820:7:20"
                      }
                    ],
                    "id": 5362,
                    "name": "VariableDeclaration",
                    "src": "820:13:20"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_calldata",
                      "overrides": null,
                      "scope": 5382,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 5363,
                        "name": "ElementaryTypeName",
                        "src": "839:5:20"
                      }
                    ],
                    "id": 5364,
                    "name": "VariableDeclaration",
                    "src": "839:22:20"
                  }
                ],
                "id": 5365,
                "name": "ParameterList",
                "src": "814:51:20"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 5382,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 5367,
                        "name": "ElementaryTypeName",
                        "src": "924:4:20"
                      }
                    ],
                    "id": 5368,
                    "name": "VariableDeclaration",
                    "src": "924:4:20"
                  }
                ],
                "id": 5369,
                "name": "ParameterList",
                "src": "923:6:20"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 5369
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "||",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "hasAccess",
                                  "referencedDeclaration": 5437,
                                  "type": "function (address,bytes memory) view returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -25,
                                      "type": "contract super SimpleReadAccessController",
                                      "value": "super"
                                    },
                                    "id": 5370,
                                    "name": "Identifier",
                                    "src": "945:5:20"
                                  }
                                ],
                                "id": 5371,
                                "name": "MemberAccess",
                                "src": "945:15:20"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5362,
                                  "type": "address",
                                  "value": "_user"
                                },
                                "id": 5372,
                                "name": "Identifier",
                                "src": "961:5:20"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5364,
                                  "type": "bytes memory",
                                  "value": "_calldata"
                                },
                                "id": 5373,
                                "name": "Identifier",
                                "src": "968:9:20"
                              }
                            ],
                            "id": 5374,
                            "name": "FunctionCall",
                            "src": "945:33:20"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5362,
                                  "type": "address",
                                  "value": "_user"
                                },
                                "id": 5375,
                                "name": "Identifier",
                                "src": "982:5:20"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "origin",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -26,
                                      "type": "tx",
                                      "value": "tx"
                                    },
                                    "id": 5376,
                                    "name": "Identifier",
                                    "src": "991:2:20"
                                  }
                                ],
                                "id": 5377,
                                "name": "MemberAccess",
                                "src": "991:9:20"
                              }
                            ],
                            "id": 5378,
                            "name": "BinaryOperation",
                            "src": "982:18:20"
                          }
                        ],
                        "id": 5379,
                        "name": "BinaryOperation",
                        "src": "945:55:20"
                      }
                    ],
                    "id": 5380,
                    "name": "Return",
                    "src": "938:62:20"
                  }
                ],
                "id": 5381,
                "name": "Block",
                "src": "932:73:20"
              }
            ],
            "id": 5382,
            "name": "FunctionDefinition",
            "src": "796:209:20"
          }
        ],
        "id": 5383,
        "name": "ContractDefinition",
        "src": "627:381:20"
      }
    ],
    "id": 5384,
    "name": "SourceUnit",
    "src": "32:977:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-24T09:01:28.052Z",
  "devdoc": {
    "details": "SimpleReadAccessController is not suitable for access controlling writes since it grants any externally owned account access! See SimpleWriteAccessController for that.",
    "methods": {
      "acceptOwnership()": {
        "details": "Allows an ownership transfer to be completed by the recipient."
      },
      "addAccess(address)": {
        "params": {
          "_user": "The address to add"
        }
      },
      "hasAccess(address,bytes)": {
        "params": {
          "_user": "The address to query"
        }
      },
      "removeAccess(address)": {
        "params": {
          "_user": "The address to remove"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows an owner to begin transferring ownership to a new address, pending."
      }
    },
    "title": "SimpleReadAccessController"
  },
  "userdoc": {
    "methods": {
      "addAccess(address)": {
        "notice": "Adds an address to the access list"
      },
      "disableAccessCheck()": {
        "notice": "makes the access check unenforced"
      },
      "enableAccessCheck()": {
        "notice": "makes the access check enforced"
      },
      "hasAccess(address,bytes)": {
        "notice": "Returns the access of an address"
      },
      "removeAccess(address)": {
        "notice": "Removes an address from the access list"
      }
    },
    "notice": "Gives access to: - any externally owned account (note that offchain actors can always read any contract storage regardless of onchain access control measures, so this does not weaken the access control while improving usability) - accounts explicitly added to an access list"
  }
}