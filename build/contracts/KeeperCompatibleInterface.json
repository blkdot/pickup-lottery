{
  "contractName": "KeeperCompatibleInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkUpkeep(bytes)\":{\"params\":{\"checkData\":\"data passed to the contract when checking for upkeep.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation.\"}}}},\"userdoc\":{\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"checks if the contract requires work to be done.\"},\"performUpkeep(bytes)\":{\"notice\":\"Performs work on the contract. Executed by the keepers, via the registry.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/v0.6/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/v0.6/interfaces/KeeperCompatibleInterface.sol\":{\"keccak256\":\"0x6022da2def494b3c95f6c87a9b6a9eed2c5d1ede6ecbd23c0a64d34a12f1d685\",\"urls\":[\"bzz-raw://284162b2f1230d5a9f35de87172aabb542cd25e542a4cebd48b94013ad020296\",\"dweb:/ipfs/QmWUnBy17URXb6vFg6WMDqx5cxDS7NUXpiJuytoyQwbapR\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface KeeperCompatibleInterface {\n\n  /**\n   * @notice checks if the contract requires work to be done.\n   * @param checkData data passed to the contract when checking for upkeep.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with,\n   * if upkeep is needed.\n   */\n  function checkUpkeep(\n    bytes calldata checkData\n  )\n    external\n    returns (\n      bool upkeepNeeded,\n      bytes memory performData\n    );\n\n  /**\n   * @notice Performs work on the contract. Executed by the keepers, via the registry.\n   * @param performData is the data which was passed back from the checkData\n   * simulation.\n   */\n  function performUpkeep(\n    bytes calldata performData\n  ) external;\n}\n",
  "sourcePath": "/home/rol/Desktop/lotteryVue/lottery/contracts/v0.6/interfaces/KeeperCompatibleInterface.sol",
  "ast": {
    "absolutePath": "project:/contracts/v0.6/interfaces/KeeperCompatibleInterface.sol",
    "exportedSymbols": {
      "KeeperCompatibleInterface": [
        8265
      ]
    },
    "id": 8266,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8248,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:37"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 8265,
        "linearizedBaseContracts": [
          8265
        ],
        "name": "KeeperCompatibleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 8249,
              "nodeType": "StructuredDocumentation",
              "src": "98:356:37",
              "text": "@notice checks if the contract requires work to be done.\n@param checkData data passed to the contract when checking for upkeep.\n@return upkeepNeeded boolean to indicate whether the keeper should call\nperformUpkeep or not.\n@return performData bytes that the keeper should call performUpkeep with,\nif upkeep is needed."
            },
            "functionSelector": "6e04ff0d",
            "id": 8258,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8251,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8258,
                  "src": "483:24:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8250,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:34:37"
            },
            "returnParameters": {
              "id": 8257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8254,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8258,
                  "src": "545:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8253,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8256,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8258,
                  "src": "570:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:63:37"
            },
            "scope": 8265,
            "src": "457:144:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 8259,
              "nodeType": "StructuredDocumentation",
              "src": "605:190:37",
              "text": "@notice Performs work on the contract. Executed by the keepers, via the registry.\n@param performData is the data which was passed back from the checkData\nsimulation."
            },
            "functionSelector": "4585e33b",
            "id": 8264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8261,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8264,
                  "src": "826:26:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:36:37"
            },
            "returnParameters": {
              "id": 8263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:0:37"
            },
            "scope": 8265,
            "src": "798:68:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8266,
        "src": "57:811:37"
      }
    ],
    "src": "32:837:37"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/v0.6/interfaces/KeeperCompatibleInterface.sol",
      "exportedSymbols": {
        "KeeperCompatibleInterface": [
          8265
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 8248,
        "name": "PragmaDirective",
        "src": "32:23:37"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            8265
          ],
          "name": "KeeperCompatibleInterface",
          "scope": 8266
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "functionSelector": "6e04ff0d",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkUpkeep",
              "overrides": null,
              "scope": 8265,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice checks if the contract requires work to be done.\n@param checkData data passed to the contract when checking for upkeep.\n@return upkeepNeeded boolean to indicate whether the keeper should call\nperformUpkeep or not.\n@return performData bytes that the keeper should call performUpkeep with,\nif upkeep is needed."
                },
                "id": 8249,
                "name": "StructuredDocumentation",
                "src": "98:356:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "checkData",
                      "overrides": null,
                      "scope": 8258,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8250,
                        "name": "ElementaryTypeName",
                        "src": "483:5:37"
                      }
                    ],
                    "id": 8251,
                    "name": "VariableDeclaration",
                    "src": "483:24:37"
                  }
                ],
                "id": 8252,
                "name": "ParameterList",
                "src": "477:34:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "upkeepNeeded",
                      "overrides": null,
                      "scope": 8258,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 8253,
                        "name": "ElementaryTypeName",
                        "src": "545:4:37"
                      }
                    ],
                    "id": 8254,
                    "name": "VariableDeclaration",
                    "src": "545:17:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "performData",
                      "overrides": null,
                      "scope": 8258,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8255,
                        "name": "ElementaryTypeName",
                        "src": "570:5:37"
                      }
                    ],
                    "id": 8256,
                    "name": "VariableDeclaration",
                    "src": "570:24:37"
                  }
                ],
                "id": 8257,
                "name": "ParameterList",
                "src": "537:63:37"
              }
            ],
            "id": 8258,
            "name": "FunctionDefinition",
            "src": "457:144:37"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "4585e33b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "performUpkeep",
              "overrides": null,
              "scope": 8265,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Performs work on the contract. Executed by the keepers, via the registry.\n@param performData is the data which was passed back from the checkData\nsimulation."
                },
                "id": 8259,
                "name": "StructuredDocumentation",
                "src": "605:190:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "performData",
                      "overrides": null,
                      "scope": 8264,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8260,
                        "name": "ElementaryTypeName",
                        "src": "826:5:37"
                      }
                    ],
                    "id": 8261,
                    "name": "VariableDeclaration",
                    "src": "826:26:37"
                  }
                ],
                "id": 8262,
                "name": "ParameterList",
                "src": "820:36:37"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8263,
                "name": "ParameterList",
                "src": "865:0:37"
              }
            ],
            "id": 8264,
            "name": "FunctionDefinition",
            "src": "798:68:37"
          }
        ],
        "id": 8265,
        "name": "ContractDefinition",
        "src": "57:811:37"
      }
    ],
    "id": 8266,
    "name": "SourceUnit",
    "src": "32:837:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-24T09:01:28.086Z",
  "devdoc": {
    "methods": {
      "checkUpkeep(bytes)": {
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "performUpkeep(bytes)": {
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry."
      }
    }
  }
}